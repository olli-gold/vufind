; This file controls how denied permissions are treated within VuFind.
;
; The permissions need to be set in permissions.ini.
; In this file you can configure, what should happen, if a permission is denied.
; Please use the permission name from permissions.ini as section name here.
; Example:
;
; This role from permissions.ini
; [default.EITModule]
; role = loggedin
; permission = access.EITModule
;
; should be configured here in section
; [access.EITModule]
;
; See permissions.ini for a more permissions, that you may also wish to configure here.
;

; Please use the following options for each section you want to use:
; permissionDeniedAction = "promptlogin|exception:exceptionName|template:templateName|message:message"
; * promptlogin displays or pops up a login prompt
; * exception throws the exception configured in the action
;   * the exceptionName after the colon is the name of the exception you want to throw
; * template calls a template (parameters can be set using the params option)
;   * the templateName after the colon is the name of the template that we should call
; * message displays a message or a translateable string
;   * the message after the colon is the message or translateable string, that should be displayed
; params[] = "key=value"
; * You can set parameters you want to pass to the template or the exception

; What do we do with the EIT module if the user is not authorized to use it?
[access.EITModule]

; What do we do if the user hits StaffViewTab without being authorized to see it?
[access.StaffViewTab]

; What do we do with the Primo module if the user is not authorized to use it? Show it anyway or not?
[access.PrimoModule]

; What do we do if the user tries to get the VuFind admin module, but has not been authenticated?
[access.AdminModule]

; What do we do with protected reults from Summon if the user is not authorized to see them?
; Display a note telling the user what he needs to do in order to see them? Just do not show them? Something else?
[access.SummonExtendedResults]

; What do we do with the option to save favorites? Show it only to logged in users or to everyone?
; What should happen, if "everyone" uses the saving option without being authorized?
[favorites.save]

; What do we do with results, which should only be visible to persons, who are oncampus or otherwise authorized, if the person is not authorized?
[results.offcampus]
