; This file controls how denied permissions are treated within VuFind.
;
; The permissions need to be set in permissions.ini.
; In this file you can configure what should happen if a permission is denied.
; Please use the permission names from permissions.ini as section names here.
;
; Example:
;
; This role from permissions.ini:
;
; [default.EITModule]
; role = loggedin
; permission = access.EITModule
;
; should be configured here in section:
;
; [access.EITModule]
;
; See permissions.ini for more permissions that you may also wish to configure here.
;
; Within each section, there are two options which can be configured:
;
; permissionDeniedDisplayLogic: The behavior to apply when a permission is denied
; dynamically within a template; i.e. the user has access to a page but is blocked
; from a particular feature of that page. If undefined, the default behavior is
; to hide the affected functionality and display no special message.
;
; permissionDeniedAction: The behavior to apply when a permission is denied at the
; controller level; i.e. the user is totally blocked from accessing something. If
; undefined, the default behavior defined by the controller (usually promptLogin)
; will be applied.
;
; Each of these options may be set to one of the following options; most options
; also receive a colon-delimited list of parameters.
;
; exception - Throw the specified exception class (param 1) with the specified
;     exception message (param 2).
;     example: permissionDeniedAction = exception:MyExceptionClass:Access Denied.
;
; promptLogin - Redirect the user to the login page.
;     example: PermissionDeniedAction = promptLogin
;
; showMessage - Redirect the user to a "denied" page with a flash message
;     (specified as the first parameter).
;     example: permissionDeniedAction = showMessage:Blocked!
;
; showTemplate - Render a specific template, specified as the first parameter.
;     example: permissionDeniedDisplayLogic = showTemplate:error/denied

; Section for global parameters
[global]
; The default action will get used if a permission is denied, but no permission action behavior has been
; configured here or the permission section is missing in this file completely.
defaultAction = "promptLogin"

; What do we do with the EIT module if the user is not authorized to use it?
[access.EITModule]

; What do we do if the user hits StaffViewTab without being authorized to see it?
[access.StaffViewTab]

; What do we do with the Primo module if the user is not authorized to use it? Show it anyway or not?
[access.PrimoModule]

; What do we do if the user tries to get the VuFind admin module, but has not been authenticated?
[access.AdminModule]

; What do we do with protected reults from Summon if the user is not authorized to see them?
; Display a note telling the user what he needs to do in order to see them? Just do not show them? Something else?
[access.SummonExtendedResults]

; What do we do with the option to save favorites? Show it only to logged in users or to everyone?
; What should happen, if "everyone" uses the saving option without being authorized?
[favorites.save]
;permissionDeniedDisplayLogic = "showMessage:favsave_message"
;permissionDeniedDisplayLogic = "showTemplate:record/favsave"
;permissionDeniedAction = "promptLogin"

; What do we do with results, which should only be visible to persons, who are oncampus or otherwise authorized, if the person is not authorized?
[results.offcampus]
